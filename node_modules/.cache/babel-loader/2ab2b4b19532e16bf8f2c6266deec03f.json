{"ast":null,"code":"import axios from \"axios\";\nexport const API_BASE_URL = \"http://zapio-admin.com/api\";\nexport const listBusinessTypeAPI = callback => {\n  let url = `${API_BASE_URL}/v2/brand/businesstype/`;\n  axios.get(url).then(response => {\n    callback && callback({\n      status: \"success\",\n      response: response\n    });\n  }).catch(error => {\n    console.log(\"aaaaaaaaaaaaaa\", error); // handlerError(error, callback);\n  });\n};\nexport const listCountryAPI = callback => {\n  let url = `${API_BASE_URL}/v2/brand/country/`;\n  axios.get(url).then(response => {\n    callback && callback({\n      status: \"success\",\n      response: response\n    });\n  }).catch(error => {\n    console.log(\"aaaaaaaaaaaaaa\", error); // handlerError(error, callback);\n  });\n};\nexport const listStateAPI = (country, callback) => {\n  let url = `${API_BASE_URL}/v2/brand/state/`;\n  axios.post(url, {\n    country: country\n  }).then(response => {\n    callback && callback({\n      status: \"success\",\n      response: response\n    });\n  }).catch(error => {\n    console.log(\"aaaaaaaaaaaaaa\", error); // handlerError(error, callback);\n  });\n};\nexport const listCityAPI = (state, callback) => {\n  let url = `${API_BASE_URL}/v2/brand/city/`;\n  axios.post(url, {\n    state: state\n  }).then(response => {\n    callback && callback({\n      status: \"success\",\n      response: response\n    });\n  }).catch(error => {\n    console.log(\"aaaaaaaaaaaaaa\", error); // handlerError(error, callback);\n  });\n};\nexport const addBrandAPI = (brand, businessType, city, country, email, mobile, state, website, callback) => {\n  let url = `${API_BASE_URL}/v2/brand/create/`;\n  const formData = new FormData();\n  formData.append(\"company_name\", brand);\n  formData.append(\"business_nature\", businessType);\n  formData.append(\"country\", country);\n  formData.append(\"state\", state);\n  formData.append(\"city\", city);\n  formData.append(\"company_email_id\", email);\n  formData.append(\"company_contact_no\", mobile);\n  formData.append(\"website\", website);\n  axios.post(url, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(response => {\n    callback && callback({\n      status: \"success\",\n      response: response\n    });\n  }).catch(error => {\n    console.log(\"aaaaaaaaaaaaaa\", error);\n  });\n};\nexport const VerifyEmailAPI = (id, callback) => {\n  let url = `${API_BASE_URL}/v2/brand/active/`;\n  const formData = new FormData();\n  formData.append(\"id\", id);\n  axios.post(url, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(response => {\n    callback && callback({\n      status: \"success\",\n      response: response\n    });\n  }).catch(error => {\n    console.log(\"aaaaaaaaaaaaaa\", error);\n  });\n};\n_c = VerifyEmailAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerifyEmailAPI\");","map":{"version":3,"sources":["/home/vivek/demo-landing/src/ApiIntegration.js"],"names":["axios","API_BASE_URL","listBusinessTypeAPI","callback","url","get","then","response","status","catch","error","console","log","listCountryAPI","listStateAPI","country","post","listCityAPI","state","addBrandAPI","brand","businessType","city","email","mobile","website","formData","FormData","append","headers","VerifyEmailAPI","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,YAAY,GAAG,4BAArB;AAEP,OAAO,MAAMC,mBAAmB,GAAGC,QAAQ,IAAI;AAC3C,MAAIC,GAAG,GAAI,GAAEH,YAAa,yBAA1B;AACAD,EAAAA,KAAK,CACAK,GADL,CACSD,GADT,EAEKE,IAFL,CAEUC,QAAQ,IAAI;AACdJ,IAAAA,QAAQ,IACJA,QAAQ,CAAC;AACLK,MAAAA,MAAM,EAAE,SADH;AAELD,MAAAA,QAAQ,EAAEA;AAFL,KAAD,CADZ;AAKH,GARL,EASKE,KATL,CASWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,EADY,CAEZ;AACH,GAZL;AAaH,CAfM;AAiBP,OAAO,MAAMG,cAAc,GAAGV,QAAQ,IAAI;AACtC,MAAIC,GAAG,GAAI,GAAEH,YAAa,oBAA1B;AACAD,EAAAA,KAAK,CACAK,GADL,CACSD,GADT,EAEKE,IAFL,CAEUC,QAAQ,IAAI;AACdJ,IAAAA,QAAQ,IACJA,QAAQ,CAAC;AACLK,MAAAA,MAAM,EAAE,SADH;AAELD,MAAAA,QAAQ,EAAEA;AAFL,KAAD,CADZ;AAKH,GARL,EASKE,KATL,CASWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,EADY,CAEZ;AACH,GAZL;AAaH,CAfM;AAiBP,OAAO,MAAMI,YAAY,GAAG,CAACC,OAAD,EAAUZ,QAAV,KAAuB;AAC/C,MAAIC,GAAG,GAAI,GAAEH,YAAa,kBAA1B;AACAD,EAAAA,KAAK,CACAgB,IADL,CACUZ,GADV,EACe;AAAEW,IAAAA,OAAO,EAAEA;AAAX,GADf,EAEKT,IAFL,CAEUC,QAAQ,IAAI;AACdJ,IAAAA,QAAQ,IACJA,QAAQ,CAAC;AACLK,MAAAA,MAAM,EAAE,SADH;AAELD,MAAAA,QAAQ,EAAEA;AAFL,KAAD,CADZ;AAKH,GARL,EASKE,KATL,CASWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,EADY,CAEZ;AACH,GAZL;AAaH,CAfM;AAgBP,OAAO,MAAMO,WAAW,GAAG,CAACC,KAAD,EAAQf,QAAR,KAAqB;AAC5C,MAAIC,GAAG,GAAI,GAAEH,YAAa,iBAA1B;AACAD,EAAAA,KAAK,CACAgB,IADL,CACUZ,GADV,EACe;AAAEc,IAAAA,KAAK,EAAEA;AAAT,GADf,EAEKZ,IAFL,CAEUC,QAAQ,IAAI;AACdJ,IAAAA,QAAQ,IACJA,QAAQ,CAAC;AACLK,MAAAA,MAAM,EAAE,SADH;AAELD,MAAAA,QAAQ,EAAEA;AAFL,KAAD,CADZ;AAKH,GARL,EASKE,KATL,CASWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,EADY,CAEZ;AACH,GAZL;AAaH,CAfM;AAoBP,OAAO,MAAMS,WAAW,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,IAAtB,EAA4BP,OAA5B,EAAqCQ,KAArC,EAA4CC,MAA5C,EAAoDN,KAApD,EAA2DO,OAA3D,EAAoEtB,QAApE,KAAiF;AAExG,MAAIC,GAAG,GAAI,GAAEH,YAAa,mBAA1B;AACA,QAAMyB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCR,KAAhC;AACAM,EAAAA,QAAQ,CAACE,MAAT,CAAgB,iBAAhB,EAAmCP,YAAnC;AACAK,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2Bb,OAA3B;AACAW,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBV,KAAzB;AACAQ,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AACAI,EAAAA,QAAQ,CAACE,MAAT,CAAgB,kBAAhB,EAAoCL,KAApC;AACAG,EAAAA,QAAQ,CAACE,MAAT,CAAgB,oBAAhB,EAAsCJ,MAAtC;AACAE,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BH,OAA3B;AACAzB,EAAAA,KAAK,CACAgB,IADL,CACUZ,GADV,EACesB,QADf,EACyB;AACjBG,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADQ,GADzB,EAMKvB,IANL,CAMUC,QAAQ,IAAI;AACdJ,IAAAA,QAAQ,IACJA,QAAQ,CAAC;AACLK,MAAAA,MAAM,EAAE,SADH;AAELD,MAAAA,QAAQ,EAAEA;AAFL,KAAD,CADZ;AAKH,GAZL,EAaKE,KAbL,CAaWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACH,GAfL;AAgBH,CA5BM;AA+BP,OAAO,MAAMoB,cAAc,GAAG,CAACC,EAAD,EAAK5B,QAAL,KAAkB;AAE5C,MAAIC,GAAG,GAAI,GAAEH,YAAa,mBAA1B;AACA,QAAMyB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,IAAhB,EAAsBG,EAAtB;AACA/B,EAAAA,KAAK,CACAgB,IADL,CACUZ,GADV,EACesB,QADf,EACyB;AACjBG,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADQ,GADzB,EAMKvB,IANL,CAMUC,QAAQ,IAAI;AACdJ,IAAAA,QAAQ,IACJA,QAAQ,CAAC;AACLK,MAAAA,MAAM,EAAE,SADH;AAELD,MAAAA,QAAQ,EAAEA;AAFL,KAAD,CADZ;AAKH,GAZL,EAaKE,KAbL,CAaWC,KAAK,IAAI;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B;AACH,GAfL;AAgBH,CArBM;KAAMoB,c","sourcesContent":["import axios from \"axios\";\nexport const API_BASE_URL = \"http://zapio-admin.com/api\";\n\nexport const listBusinessTypeAPI = callback => {\n    let url = `${API_BASE_URL}/v2/brand/businesstype/`;\n    axios\n        .get(url)\n        .then(response => {\n            callback &&\n                callback({\n                    status: \"success\",\n                    response: response\n                });\n        })\n        .catch(error => {\n            console.log(\"aaaaaaaaaaaaaa\", error)\n            // handlerError(error, callback);\n        });\n};\n\nexport const listCountryAPI = callback => {\n    let url = `${API_BASE_URL}/v2/brand/country/`;\n    axios\n        .get(url)\n        .then(response => {\n            callback &&\n                callback({\n                    status: \"success\",\n                    response: response\n                });\n        })\n        .catch(error => {\n            console.log(\"aaaaaaaaaaaaaa\", error)\n            // handlerError(error, callback);\n        });\n};\n\nexport const listStateAPI = (country, callback) => {\n    let url = `${API_BASE_URL}/v2/brand/state/`;\n    axios\n        .post(url, { country: country })\n        .then(response => {\n            callback &&\n                callback({\n                    status: \"success\",\n                    response: response\n                });\n        })\n        .catch(error => {\n            console.log(\"aaaaaaaaaaaaaa\", error)\n            // handlerError(error, callback);\n        });\n};\nexport const listCityAPI = (state, callback) => {\n    let url = `${API_BASE_URL}/v2/brand/city/`;\n    axios\n        .post(url, { state: state })\n        .then(response => {\n            callback &&\n                callback({\n                    status: \"success\",\n                    response: response\n                });\n        })\n        .catch(error => {\n            console.log(\"aaaaaaaaaaaaaa\", error)\n            // handlerError(error, callback);\n        });\n};\n\n\n\n\nexport const addBrandAPI = (brand, businessType, city, country, email, mobile, state, website, callback) => {\n\n    let url = `${API_BASE_URL}/v2/brand/create/`;\n    const formData = new FormData();\n    formData.append(\"company_name\", brand);\n    formData.append(\"business_nature\", businessType);\n    formData.append(\"country\", country);\n    formData.append(\"state\", state);\n    formData.append(\"city\", city);\n    formData.append(\"company_email_id\", email);\n    formData.append(\"company_contact_no\", mobile);\n    formData.append(\"website\", website);\n    axios\n        .post(url, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n        .then(response => {\n            callback &&\n                callback({\n                    status: \"success\",\n                    response: response\n                });\n        })\n        .catch(error => {\n            console.log(\"aaaaaaaaaaaaaa\", error)\n        });\n};\n\n\nexport const VerifyEmailAPI = (id, callback) => {\n\n    let url = `${API_BASE_URL}/v2/brand/active/`;\n    const formData = new FormData();\n    formData.append(\"id\", id);\n    axios\n        .post(url, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n        .then(response => {\n            callback &&\n                callback({\n                    status: \"success\",\n                    response: response\n                });\n        })\n        .catch(error => {\n            console.log(\"aaaaaaaaaaaaaa\", error)\n        });\n};"]},"metadata":{},"sourceType":"module"}